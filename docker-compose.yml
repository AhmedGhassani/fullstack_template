services:
  db:
    image: postgres:15-alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  web:
    build:
      context: ./services/web
      dockerfile: dockerFile
    container_name: web
    working_dir: /app
    ports:
      - 5173:5173
    volumes:
      - ./services/web:/app
      - .env:/app/.env
    env_file:
      - .env
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3000 || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  api:
    build:
      context: ./services/api
      dockerfile: dockerFile
    container_name: api
    working_dir: /app
    volumes:
      - ./services/api:/app
      - ./data/api/logs:/app/logs
      - .env:/app/.env
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test:
        ['CMD-SHELL', 'curl -f http://localhost:3000/api/v1/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
      - ${NGINX_HOST_HTTPS_PORT}:443
    volumes:
      - ./data/nginx/logs:/var/log/nginx
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/certs:/etc/nginx/certs
    depends_on:
      - web
      - api
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
